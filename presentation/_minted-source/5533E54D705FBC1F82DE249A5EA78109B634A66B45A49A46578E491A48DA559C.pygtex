\begin{Verbatim}[commandchars=\\\{\}]
  \PYG{k}{def} \PYG{n+nf}{get\PYGZus{}minimizers}\PYG{p}{(}\PYG{n}{seq\PYGZus{}arr}\PYG{p}{:} \PYG{n}{NDArray}\PYG{p}{[}\PYG{n}{Shape}\PYG{p}{[}\PYG{l+s+s2}{\PYGZdq{}*\PYGZdq{}}\PYG{p}{],} \PYG{n}{UInt8}\PYG{p}{]):}
      \PYG{n}{sequence\PYGZus{}len} \PYG{o}{=} \PYG{n+nb}{len}\PYG{p}{(}\PYG{n}{seq\PYGZus{}arr}\PYG{p}{)}
      \PYG{n}{mask} \PYG{o}{=} \PYG{n}{generate\PYGZus{}mask}\PYG{p}{(}\PYG{n}{KMER\PYGZus{}LEN}\PYG{p}{)}  \PYG{c+c1}{\PYGZsh{} Bitwise mask}

      \PYG{c+c1}{\PYGZsh{} Function to compute kmer value based on the previous}
      \PYG{c+c1}{\PYGZsh{} (on the left side) kmer value and new nucleotide}
      \PYG{n}{uadd} \PYG{o}{=} \PYG{n}{frompyfunc}\PYG{p}{(}\PYG{k}{lambda} \PYG{n}{x}\PYG{p}{,} \PYG{n}{y}\PYG{p}{:} \PYG{p}{((}\PYG{n}{x} \PYG{o}{\PYGZlt{}\PYGZlt{}} \PYG{l+m+mi}{2}\PYG{p}{)} \PYG{o}{|} \PYG{n}{y}\PYG{p}{)} \PYG{o}{\PYGZam{}} \PYG{n}{mask}\PYG{p}{,} \PYG{l+m+mi}{2}\PYG{p}{,} \PYG{l+m+mi}{1}\PYG{p}{)}
      \PYG{n}{kmers} \PYG{o}{=} \PYG{n}{uadd}\PYG{o}{.}\PYG{n}{accumulate}\PYG{p}{(}\PYG{n}{seq\PYGZus{}arr}\PYG{p}{,} \PYG{n}{dtype}\PYG{o}{=}\PYG{n+nb}{object}\PYG{p}{)}\PYG{o}{.}\PYG{n}{astype}\PYG{p}{(}\PYG{n+nb}{int}\PYG{p}{)}
      \PYG{n}{kmers}\PYG{p}{[:}\PYG{n}{KMER\PYGZus{}LEN}\PYG{o}{\PYGZhy{}}\PYG{l+m+mi}{2}\PYG{p}{]} \PYG{o}{=} \PYG{l+m+mi}{0}

      \PYG{c+c1}{\PYGZsh{} Do sliding window and get min kmers positions}
      \PYG{n}{kmers\PYGZus{}min\PYGZus{}pos} \PYG{o}{=} \PYG{n}{add}\PYG{p}{(}
          \PYG{n}{argmin}\PYG{p}{(}
            \PYG{n}{sliding\PYGZus{}window\PYGZus{}view}\PYG{p}{(}\PYG{n}{kmers}\PYG{p}{,} \PYG{n}{window\PYGZus{}shape}\PYG{o}{=}\PYG{n}{WINDOW\PYGZus{}LEN}
          \PYG{p}{),} \PYG{n}{axis}\PYG{o}{=}\PYG{l+m+mi}{1}\PYG{p}{),}
          \PYG{n}{arange}\PYG{p}{(}\PYG{l+m+mi}{0}\PYG{p}{,} \PYG{n}{sequence\PYGZus{}len} \PYG{o}{\PYGZhy{}} \PYG{n}{WINDOW\PYGZus{}LEN} \PYG{o}{+} \PYG{l+m+mi}{1}\PYG{p}{)}
      \PYG{p}{)}

      \PYG{c+c1}{\PYGZsh{} ...}
\end{Verbatim}
